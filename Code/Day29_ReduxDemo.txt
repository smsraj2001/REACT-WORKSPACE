==================== App.js ====================

import './App.css';
import Counter from './components/Counter';


function App() {
  return (
    <div className="App">
      <Counter />

    </div>
  );
}

export default App;


--------------------------------------------------------------------------------

==================== App.test.js ====================

import { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});


--------------------------------------------------------------------------------

==================== index.js ====================

import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import { Provider } from 'react-redux'
import { myreducer, store } from './redux/store'; 

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  
  <React.StrictMode>
    <Provider store = {store}>
    <App />
    </Provider>
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


--------------------------------------------------------------------------------

==================== components/Counter.jsx ====================

import React from 'react'
import { useDispatch, useSelector } from 'react-redux'
import { decrement, increment } from '../redux/actions/counterActions';

const Counter = () => {
    const dispatch = useDispatch();
    const counter = useSelector((state) => state)

    console.log("Counter is: " + counter);

  return (
    <div>
        <h1> Counter App </h1>
        <button onClick={() => dispatch(increment())}>Increment</button>
        <button onClick={() => dispatch(decrement())}>Decrement</button>
        <p>Value of counter: {counter}</p>
    </div>
  )
}

export default Counter

--------------------------------------------------------------------------------

==================== redux/store.js ====================

import {combineReducers,createStore} from 'redux';
import counterReducer from './reducers/counterReducer';
export const myreducer= combineReducers({
    counterReducer,
});
 
export const store=createStore(
    counterReducer
);
 
 

--------------------------------------------------------------------------------

==================== redux/actions/counterActions.js ====================

export const increment = () => {
    return {
        type: "INCREMENT",
    };
};

export const decrement = () => {
    return {
        type: "DECREMENT",
    };
};

export const reset = () => {
    return {
        type: "RESET",
    };
};


--------------------------------------------------------------------------------

==================== redux/reducers/counterReducer.js ====================

const counterReducer = (state=0,action) => {
    switch(action.type)
    {
        case "INCREMENT":
            return state+1;
        case "DECREMENT":
            return state-1;
        case "RESET":
            return state=0;
        default:
            return state;
    }
}
 
export default counterReducer

--------------------------------------------------------------------------------

